{"ast":null,"code":"import _objectSpread from\"/Users/chrisrodriguezperez/Desktop/reactApp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/Users/chrisrodriguezperez/Desktop/reactApp/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _classCallCheck from\"/Users/chrisrodriguezperez/Desktop/reactApp/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/chrisrodriguezperez/Desktop/reactApp/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/chrisrodriguezperez/Desktop/reactApp/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/chrisrodriguezperez/Desktop/reactApp/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from'react';import NavBar from'./NavBar';import ToDoList from'./ToDoList';import AddTask from'./AddTask';import{BrowserRouter,Switch,Route}from'react-router-dom';import initialData from'../initialData';import uniqueid from'uniqueid';import Fetching from'./Fetching';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={tasks:[],fetching:true};_this.componentDidMount=function(){var delay=Math.floor(Math.random()*5000);setTimeout(function(){_this.setState({fetching:false,tasks:initialData});},delay);};_this.onToggleCompleted=function(taskId){var taskToUpdate=_this.state.tasks.find(function(task){return task.id===taskId;});taskToUpdate.completed=!taskToUpdate.completed;_this.setState(function(prevState){return prevState.tasks.map(function(task){return task.id===taskId?taskToUpdate:task;});});};_this.onAddTask=function(newTaskName){var newTask={id:uniqueid(),name:newTaskName,completed:false};_this.setState(function(prevState){return{tasks:[].concat(_toConsumableArray(prevState.tasks),[newTask])};});};_this.onDeleteCompleted=function(){_this.setState(function(prevState){var newState=prevState.tasks.filter(function(task){return!task.completed;});return{tasks:newState};});};return _this;}_createClass(App,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsxs(\"section\",{id:\"todo\",children:[this.state.fetching?/*#__PURE__*/_jsx(Fetching,{}):null,/*#__PURE__*/_jsxs(BrowserRouter,{children:[/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/add-task\",render:function render(props){return/*#__PURE__*/_jsx(AddTask,_objectSpread(_objectSpread({},props),{},{onAddTask:_this2.onAddTask}));}}),/*#__PURE__*/_jsx(Route,{path:\"/:filter?\",render:function render(props){return/*#__PURE__*/_jsx(ToDoList,_objectSpread(_objectSpread({},props),{},{tasks:_this2.state.tasks,onToggleCompleted:_this2.onToggleCompleted}));}})]}),/*#__PURE__*/_jsx(NavBar,{onDeleteCompleted:this.onDeleteCompleted})]})]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"names":["React","NavBar","ToDoList","AddTask","BrowserRouter","Switch","Route","initialData","uniqueid","Fetching","App","state","tasks","fetching","componentDidMount","delay","Math","floor","random","setTimeout","setState","onToggleCompleted","taskId","taskToUpdate","find","task","id","completed","prevState","map","onAddTask","newTaskName","newTask","name","onDeleteCompleted","newState","filter","props","Component"],"sources":["/Users/chrisrodriguezperez/Desktop/reactApp/src/components/App.js"],"sourcesContent":["import React from 'react'\nimport NavBar from './NavBar'\nimport ToDoList from './ToDoList'\nimport AddTask from './AddTask'\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport initialData from '../initialData'\nimport uniqueid from 'uniqueid'\nimport Fetching from './Fetching'\n\nclass App extends React.Component{\n\n    state = {\n        tasks: [],\n        fetching: true\n    }\n    componentDidMount = () => {\n        let delay = Math.floor(Math.random() * 5000)\n        setTimeout(() => {\n          this.setState({\n            fetching: false,\n            tasks : initialData\n          })\n        }, delay)\n      }\n\n    onToggleCompleted = (taskId) => {\n        let taskToUpdate = this.state.tasks.find(task => task.id === taskId)\n        taskToUpdate.completed = !taskToUpdate.completed\n\n        this.setState(prevState => (\n            prevState.tasks.map(task => {\n                return task.id === taskId ?  taskToUpdate : task\n            })\n        ))\n    }\n\n    onAddTask = (newTaskName) => {\n        let newTask = {\n            id: uniqueid(),\n            name: newTaskName,\n            completed: false\n        }\n\n        this.setState(prevState => ({\n            tasks: [...prevState.tasks, newTask]\n        }))\n    }\n\n    onDeleteCompleted = () => {\n        this.setState(prevState => {\n            let newState = prevState.tasks.filter(task => !task.completed)\n            return {\n                tasks: newState\n            }\n        })\n    }\n\n    render(){\n        return(\n            <section id=\"todo\">\n                {this.state.fetching? <Fetching /> : null}\n                <BrowserRouter>\n                    <Switch>\n                        <Route path=\"/add-task\" render={(props) => <AddTask {...props} onAddTask={this.onAddTask} />} />\n                        <Route path=\"/:filter?\" render={(props) => <ToDoList {...props} tasks={this.state.tasks} onToggleCompleted={this.onToggleCompleted} />} />\n                    </Switch>\n                    <NavBar onDeleteCompleted={this.onDeleteCompleted} />\n                </BrowserRouter>\n            </section>\n        )\n    }\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}