{"ast":null,"code":"var _jsxFileName = \"/Users/chrisrodriguezperez/Desktop/reactApp/src/components/App.js\";\nimport React from 'react';\nimport NavBar from './NavBar';\nimport ToDoList from './ToDoList';\nimport AddTask from './AddTask';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport initialData from '../initialData';\nimport uniqueid from 'uniqueid';\nimport Fetching from './Fetching';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      tasks: [],\n      fetching: true\n    };\n    this.componentDidMount = () => {\n      let delay = Math.floor(Math.random() * 5000);\n      setTimeout(() => {\n        this.setState({\n          fetching: false,\n          tasks: initialData\n        });\n      }, delay);\n    };\n    this.onToggleCompleted = taskId => {\n      let taskToUpdate = this.state.tasks.find(task => task.id === taskId);\n      taskToUpdate.completed = !taskToUpdate.completed;\n      this.setState(prevState => prevState.tasks.map(task => {\n        return task.id === taskId ? taskToUpdate : task;\n      }));\n    };\n    this.onAddTask = newTaskName => {\n      let newTask = {\n        id: uniqueid(),\n        name: newTaskName,\n        completed: false\n      };\n      this.setState(prevState => ({\n        tasks: [...prevState.tasks, newTask]\n      }));\n    };\n    this.onDeleteCompleted = () => {\n      this.setState(prevState => {\n        let newState = prevState.tasks.filter(task => !task.completed);\n        return {\n          tasks: newState\n        };\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"todo\",\n      children: [this.state.fetching ? /*#__PURE__*/_jsxDEV(Fetching, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 39\n      }, this) : null, /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: [/*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/add-task\",\n            render: props => /*#__PURE__*/_jsxDEV(AddTask, {\n              ...props,\n              onAddTask: this.onAddTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 68\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/:filter?\",\n            render: props => /*#__PURE__*/_jsxDEV(ToDoList, {\n              ...props,\n              tasks: this.state.tasks,\n              onToggleCompleted: this.onToggleCompleted\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 68\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n          onDeleteCompleted: this.onDeleteCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","NavBar","ToDoList","AddTask","BrowserRouter","Switch","Route","initialData","uniqueid","Fetching","App","Component","state","tasks","fetching","componentDidMount","delay","Math","floor","random","setTimeout","setState","onToggleCompleted","taskId","taskToUpdate","find","task","id","completed","prevState","map","onAddTask","newTaskName","newTask","name","onDeleteCompleted","newState","filter","render","props"],"sources":["/Users/chrisrodriguezperez/Desktop/reactApp/src/components/App.js"],"sourcesContent":["import React from 'react'\nimport NavBar from './NavBar'\nimport ToDoList from './ToDoList'\nimport AddTask from './AddTask'\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport initialData from '../initialData'\nimport uniqueid from 'uniqueid'\nimport Fetching from './Fetching'\n\nclass App extends React.Component{\n\n    state = {\n        tasks: [],\n        fetching: true\n    }\n    componentDidMount = () => {\n        let delay = Math.floor(Math.random() * 5000)\n        setTimeout(() => {\n          this.setState({\n            fetching: false,\n            tasks : initialData\n          })\n        }, delay)\n      }\n\n    onToggleCompleted = (taskId) => {\n        let taskToUpdate = this.state.tasks.find(task => task.id === taskId)\n        taskToUpdate.completed = !taskToUpdate.completed\n\n        this.setState(prevState => (\n            prevState.tasks.map(task => {\n                return task.id === taskId ?  taskToUpdate : task\n            })\n        ))\n    }\n\n    onAddTask = (newTaskName) => {\n        let newTask = {\n            id: uniqueid(),\n            name: newTaskName,\n            completed: false\n        }\n\n        this.setState(prevState => ({\n            tasks: [...prevState.tasks, newTask]\n        }))\n    }\n\n    onDeleteCompleted = () => {\n        this.setState(prevState => {\n            let newState = prevState.tasks.filter(task => !task.completed)\n            return {\n                tasks: newState\n            }\n        })\n    }\n\n    render(){\n        return(\n            <section id=\"todo\">\n                {this.state.fetching? <Fetching /> : null}\n                <BrowserRouter>\n                    <Switch>\n                        <Route path=\"/add-task\" render={(props) => <AddTask {...props} onAddTask={this.onAddTask} />} />\n                        <Route path=\"/:filter?\" render={(props) => <ToDoList {...props} tasks={this.state.tasks} onToggleCompleted={this.onToggleCompleted} />} />\n                    </Switch>\n                    <NavBar onDeleteCompleted={this.onDeleteCompleted} />\n                </BrowserRouter>\n            </section>\n        )\n    }\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}